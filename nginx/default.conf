server {
    listen 80;
    server_name localhost;
    root /var/www/html;
    index index.html index.htm index.php;

    # Servir archivos estáticos directamente
    location / {
        try_files $uri $uri/ /index.html; # Adecuado para SPAs si usas routing en frontend
        # O simplemente: try_files $uri $uri/ =404; si no es una SPA
    }

    # Pasar scripts PHP al servicio PHP-FPM
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # Usa el nombre del servicio 'php' y el puerto por defecto de FPM (9000)
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # ---- NUEVA CONFIGURACIÓN PARA NODE.JS ----
    # Redirigir peticiones /api/ al servicio Node.js 'api' en el puerto 3000
    location /api/ {
        # Elimina el prefijo /api/ antes de pasar la petición a Node
        rewrite ^/api/(.*)$ /$1 break;

        proxy_pass http://api:3000; # Usa el nombre del servicio y el puerto expuesto
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Denegar acceso a archivos ocultos como .htaccess
    location ~ /\.ht {
        deny all;
    }

    # Manejo de logs (opcional, puedes configurarlos como prefieras)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}